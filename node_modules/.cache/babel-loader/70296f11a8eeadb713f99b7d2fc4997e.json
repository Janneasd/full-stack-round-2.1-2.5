{"ast":null,"code":"var _jsxFileName = \"C:\\\\Full stack Round 2\\\\part2.1-2.5\\\\src\\\\components\\\\Course.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*\r\nconst Course = ({ course}) => {\r\n    const total = course.reduce(\r\n        (a, b) => a + b.parts.exercises,\r\n        0\r\n    );\r\n  \r\nreturn (\r\n    <div>\r\n            {course.map(index =>\r\n        <ul key={index.id}>\r\n        {index.name}\r\n         </ul>\r\n            )} \r\n          {course.map(index =>\r\n          <ul key={index.parts}>\r\n              {console.log(index.exercises)}\r\n              {index.exercises}\r\n          </ul>\r\n            )}  \r\n            total of {total} exercises\r\n           \r\n    </div>\r\n)\r\n}\r\n*/\n\n/*\r\nconst Sum = ({course}) => {\r\n    const sum = course.map(part => part.exercises)\r\n\r\n    return (\r\n        <div>\r\n      Total {sum.reduce((a,b) => a +b)} of exercises\r\n        </div>\r\n    )\r\n}\r\n*/\n\n/*\r\nconst Header = ({course}) => {\r\n    const parts = course.map(index => index.parts)\r\n    const buffer = []\r\n    const buffer1 = []\r\n    \r\n   for (var i = 0; i < parts.length; i++) {\r\n       const name = parts[i].map(index => index.name)\r\n       const exercises = parts[i].map(index => index.exercises)\r\n       buffer.push(<div>{name}</div>)\r\n       buffer1.push(<div>{exercises}</div>)\r\n   }\r\n    return (\r\n<div>\r\n   {buffer.map(index => \r\n    <ul key={index.id} >\r\n        <li> {index}</li>\r\n    </ul>\r\n    )}\r\n    {buffer1.map(index => \r\n       <ul key={index.id}>\r\n       <li> {index}</li>\r\n       </ul>\r\n       )}\r\n</div>\r\n    )\r\n}\r\n*/\n\n/*\r\nconst Header = (course) => {\r\n    return (\r\n    <h1>\r\n        {course.name}\r\n    </h1>\r\n    )\r\n}\r\n\r\nconst Content = (course) => {\r\n   console.log(course.parts)\r\n return (\r\n     <div>\r\n      {course.parts.map(index => <Part key={index.id} exercises={index.exercises} name={index.name} />)}\r\n     </div>\r\n )\r\n}\r\n\r\nconst Part = (props) => {\r\n    console.log(props)\r\n    return (\r\n    <div>\r\n        {props.name} {props.exercises}\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Total = (course) => {\r\n    const sum = course.parts.map(index => index.exercises)\r\n\r\n    return (\r\n        <div>\r\n            total of {sum.reduce((a,b) => a + b)} exercises\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Course = ({props}) => { \r\n\r\n  console.log(props)\r\n    return (\r\n        <div>\r\n           \r\n        </div>\r\n  )\r\n}\r\n*/\nconst Header = props => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: props.course.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 119,\n  columnNumber: 3\n}, this);\n\n_c = Header;\n\nconst Total = props => {\n  const parts = props.course.parts.map(course => course.exercises);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"yhteens\\xE4 \", parts.reduce((s, p) => s + p), \" teht\\xE4v\\xE4\\xE4\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Total;\n\nconst Part = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.name, \" \", props.exercises]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 130,\n  columnNumber: 3\n}, this);\n\n_c3 = Part;\n\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.course.parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      name: part.name,\n      exercises: part.exercises\n    }, part.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 45\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Content;\n\nconst Course = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: props.course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      course: props.course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      course: props.course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = Course;\nexport default Course;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Total\");\n$RefreshReg$(_c3, \"Part\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"Course\");","map":{"version":3,"sources":["C:/Full stack Round 2/part2.1-2.5/src/components/Course.js"],"names":["Header","props","course","name","Total","parts","map","exercises","reduce","s","p","Part","Content","part","id","Course","console","log"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,MAAM,GAAGC,KAAK,iBAClB;AAAA,YAAKA,KAAK,CAACC,MAAN,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,M;;AAGN,MAAMI,KAAK,GAAIH,KAAD,IAAW;AACvB,QAAMI,KAAK,GAAGJ,KAAK,CAACC,MAAN,CAAaG,KAAb,CAAmBC,GAAnB,CAAuBJ,MAAM,IAAIA,MAAM,CAACK,SAAxC,CAAd;AAEA,sBACE;AAAA,+BAAaF,KAAK,CAACG,MAAN,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA3B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAND;;MAAMN,K;;AAQN,MAAMO,IAAI,GAAGV,KAAK,iBAChB;AAAA,aAAIA,KAAK,CAACE,IAAV,OAAiBF,KAAK,CAACM,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMI,I;;AAGN,MAAMC,OAAO,GAAIX,KAAD,IAAW;AACvB,sBACI;AAAA,cACKA,KAAK,CAACC,MAAN,CAAaG,KAAb,CAAmBC,GAAnB,CAAuBO,IAAI,iBAAI,QAAC,IAAD;AAAoB,MAAA,IAAI,EAAEA,IAAI,CAACV,IAA/B;AAAqC,MAAA,SAAS,EAAEU,IAAI,CAACN;AAArD,OAAWM,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,YAA/B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMF,O;;AAON,MAAMG,MAAM,GAAId,KAAD,IAAW;AACtBe,EAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AAEA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA,KAAK,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAS,MAAA,MAAM,EAAED,KAAK,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAED,KAAK,CAACC;AAArB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAVD;;MAAMa,M;AAaN,eAAeA,MAAf","sourcesContent":["/*\r\nconst Course = ({ course}) => {\r\n    const total = course.reduce(\r\n        (a, b) => a + b.parts.exercises,\r\n        0\r\n    );\r\n  \r\nreturn (\r\n    <div>\r\n            {course.map(index =>\r\n        <ul key={index.id}>\r\n        {index.name}\r\n         </ul>\r\n            )} \r\n          {course.map(index =>\r\n          <ul key={index.parts}>\r\n              {console.log(index.exercises)}\r\n              {index.exercises}\r\n          </ul>\r\n            )}  \r\n            total of {total} exercises\r\n           \r\n    </div>\r\n)\r\n}\r\n*/\r\n\r\n\r\n/*\r\nconst Sum = ({course}) => {\r\n    const sum = course.map(part => part.exercises)\r\n\r\n    return (\r\n        <div>\r\n      Total {sum.reduce((a,b) => a +b)} of exercises\r\n        </div>\r\n    )\r\n}\r\n*/\r\n\r\n\r\n/*\r\nconst Header = ({course}) => {\r\n    const parts = course.map(index => index.parts)\r\n    const buffer = []\r\n    const buffer1 = []\r\n    \r\n   for (var i = 0; i < parts.length; i++) {\r\n       const name = parts[i].map(index => index.name)\r\n       const exercises = parts[i].map(index => index.exercises)\r\n       buffer.push(<div>{name}</div>)\r\n       buffer1.push(<div>{exercises}</div>)\r\n   }\r\n    return (\r\n<div>\r\n   {buffer.map(index => \r\n    <ul key={index.id} >\r\n        <li> {index}</li>\r\n    </ul>\r\n    )}\r\n    {buffer1.map(index => \r\n       <ul key={index.id}>\r\n       <li> {index}</li>\r\n       </ul>\r\n       )}\r\n</div>\r\n    )\r\n}\r\n*/\r\n/*\r\nconst Header = (course) => {\r\n    return (\r\n    <h1>\r\n        {course.name}\r\n    </h1>\r\n    )\r\n}\r\n\r\nconst Content = (course) => {\r\n   console.log(course.parts)\r\n return (\r\n     <div>\r\n      {course.parts.map(index => <Part key={index.id} exercises={index.exercises} name={index.name} />)}\r\n     </div>\r\n )\r\n}\r\n\r\nconst Part = (props) => {\r\n    console.log(props)\r\n    return (\r\n    <div>\r\n        {props.name} {props.exercises}\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Total = (course) => {\r\n    const sum = course.parts.map(index => index.exercises)\r\n\r\n    return (\r\n        <div>\r\n            total of {sum.reduce((a,b) => a + b)} exercises\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Course = ({props}) => { \r\n\r\n  console.log(props)\r\n    return (\r\n        <div>\r\n           \r\n        </div>\r\n  )\r\n}\r\n*/\r\n\r\nconst Header = props =>\r\n  <h1>{props.course.name}</h1>\r\n\r\nconst Total = (props) => {\r\n  const parts = props.course.parts.map(course => course.exercises)\r\n\r\n  return (\r\n    <p>yhteens채 {parts.reduce((s, p) => s + p)} teht채v채채</p>\r\n  )\r\n}\r\n\r\nconst Part = props =>\r\n  <p>{props.name} {props.exercises}</p>\r\n\r\nconst Content = (props) => {\r\n    return (\r\n        <div>\r\n            {props.course.parts.map(part => <Part key={part.id} name={part.name} exercises={part.exercises} />)}  \r\n        </div>\r\n    )\r\n}\r\nconst Course = (props) => {  \r\n    console.log(props)  \r\n\r\n    return (\r\n        <div>\r\n            <Header course={props.course} />\r\n            <Content course={props.course} />\r\n            <Total course={props.course} />\r\n        </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Course"]},"metadata":{},"sourceType":"module"}