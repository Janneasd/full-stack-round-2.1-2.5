{"ast":null,"code":"var _jsxFileName = \"C:\\\\Full stack Round 2\\\\part2.1-2.5\\\\src\\\\components\\\\Course.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*\r\nconst Course = ({ course}) => {\r\n    const total = course.reduce(\r\n        (a, b) => a + b.parts.exercises,\r\n        0\r\n    );\r\n  \r\nreturn (\r\n    <div>\r\n            {course.map(index =>\r\n        <ul key={index.id}>\r\n        {index.name}\r\n         </ul>\r\n            )} \r\n          {course.map(index =>\r\n          <ul key={index.parts}>\r\n              {console.log(index.exercises)}\r\n              {index.exercises}\r\n          </ul>\r\n            )}  \r\n            total of {total} exercises\r\n           \r\n    </div>\r\n)\r\n}\r\n*/\nconst Header = course => {\n  /*#__PURE__*/\n  _jsxDEV(\"h1\", {\n    children: course.map(index => /*#__PURE__*/_jsxDEV(\"ul\", {}, index.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 1\n  }, this);\n};\n\n_c = Header;\n\nconst Course = course => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Course;\nexport default Course;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Course\");","map":{"version":3,"sources":["C:/Full stack Round 2/part2.1-2.5/src/components/Course.js"],"names":["Header","course","map","index","name","Course"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,MAAM,GAAIC,MAAD,IAAY;AAC3B;AAAA;AAAA,cACKA,MAAM,CAACC,GAAP,CAAWC,KAAK,iBACjB,kBAASA,KAAK,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA,YADC;AADL;AAAA;AAAA;AAAA;AAAA;AAMC,CAPD;;KAAMJ,M;;AASN,MAAMK,MAAM,GAAIJ,MAAD,IAAY;AAEvB,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CATD;;MAAMI,M;AAWN,eAAeA,MAAf","sourcesContent":["/*\r\nconst Course = ({ course}) => {\r\n    const total = course.reduce(\r\n        (a, b) => a + b.parts.exercises,\r\n        0\r\n    );\r\n  \r\nreturn (\r\n    <div>\r\n            {course.map(index =>\r\n        <ul key={index.id}>\r\n        {index.name}\r\n         </ul>\r\n            )} \r\n          {course.map(index =>\r\n          <ul key={index.parts}>\r\n              {console.log(index.exercises)}\r\n              {index.exercises}\r\n          </ul>\r\n            )}  \r\n            total of {total} exercises\r\n           \r\n    </div>\r\n)\r\n}\r\n*/\r\n\r\nconst Header = (course) => {\r\n<h1>\r\n    {course.map(index =>\r\n    <ul key={index.name}>\r\n    </ul>\r\n        )}\r\n</h1>\r\n}\r\n\r\nconst Course = (course) => {  \r\n  \r\n    return (\r\n        <div>\r\n            <Header course={course} />\r\n            <Content course={course} />\r\n            <Total course={course} />\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Course"]},"metadata":{},"sourceType":"module"}