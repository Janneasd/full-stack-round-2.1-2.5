{"ast":null,"code":"var _jsxFileName = \"C:\\\\Full stack Round 2\\\\part2.1-2.5\\\\src\\\\components\\\\Course.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*\r\nconst Course = ({ course}) => {\r\n    const total = course.reduce(\r\n        (a, b) => a + b.parts.exercises,\r\n        0\r\n    );\r\n  \r\nreturn (\r\n    <div>\r\n            {course.map(index =>\r\n        <ul key={index.id}>\r\n        {index.name}\r\n         </ul>\r\n            )} \r\n          {course.map(index =>\r\n          <ul key={index.parts}>\r\n              {console.log(index.exercises)}\r\n              {index.exercises}\r\n          </ul>\r\n            )}  \r\n            total of {total} exercises\r\n           \r\n    </div>\r\n)\r\n}\r\n*/\n\n/*\r\nconst Part = (props) => {\r\n    return (\r\n    <div>\r\n    {props.name} {props.exercises}\r\n    </div>\r\n    )\r\n}\r\n/*\r\nconst Sum = ({course}) => {\r\n    const sum = course.map(part => part.exercises)\r\n\r\n    return (\r\n        <div>\r\n      Total {sum.reduce((a,b) => a +b)} of exercises\r\n        </div>\r\n    )\r\n}\r\n*/\n\n/*\r\nconst Content = ({course}) => {\r\n    return (\r\n        <div>\r\n            {course.map( index => \r\n            <Part key={index.part} name={index.name} exercises={index.exercises}/>  )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Header = ({course}) => {\r\n    return (\r\n<h1>\r\n    {course.map(index =>\r\n    <ul key={index.id}>\r\n        {index.name}\r\n    </ul>\r\n        )}\r\n</h1>\r\n    )\r\n}\r\n\r\nconst Course = ({course}) => {  \r\n  \r\n    return (\r\n        <div>\r\n            <Header course={course} />\r\n            <Content course={course} />\r\n            <Sum course={course} />\r\n        </div>\r\n  )\r\n}\r\n*/\nconst H2Header = _ref => {\n  let {\n    header\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: header\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 34\n  }, this);\n};\n\n_c = H2Header;\n\nconst CourseContent = _ref2 => {\n  let {\n    course\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: course.map(_ref3 => {\n        let {\n          name,\n          exercises,\n          id\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(CoursePart, {\n          name: name,\n          exercises: exercises\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = CourseContent;\n\nconst CoursePart = _ref4 => {\n  let {\n    name,\n    exercises\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [name, \": \", exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 45\n  }, this);\n};\n\n_c3 = CoursePart;\n\nconst TotalExercises = _ref5 => {\n  let {\n    exercises\n  } = _ref5;\n  const total = exercises.reduce((total_exercises, part) => total_exercises + part.exercises, 0);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [\"There are total of \", total, \" exercises\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = TotalExercises;\n\nconst Course = _ref6 => {\n  let {\n    course\n  } = _ref6;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(H2Header, {\n      header: course.name\n    }, course.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CourseContent, {\n      course: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TotalExercises, {\n      exercises: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this);\n};\n\n_c5 = Course;\nexport default Course;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"H2Header\");\n$RefreshReg$(_c2, \"CourseContent\");\n$RefreshReg$(_c3, \"CoursePart\");\n$RefreshReg$(_c4, \"TotalExercises\");\n$RefreshReg$(_c5, \"Course\");","map":{"version":3,"sources":["C:/Full stack Round 2/part2.1-2.5/src/components/Course.js"],"names":["H2Header","header","CourseContent","course","map","name","exercises","id","CoursePart","TotalExercises","total","reduce","total_exercises","part","Course","parts"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,QAAQ,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAAgB;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAhB;AAAA,CAAjB;;KAAMD,Q;;AAEN,MAAME,aAAa,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACpB;AAAA,2BACE;AAAA,gBACGA,MAAM,CAACC,GAAP,CAAW;AAAA,YAAC;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,SAAR;AAAmBC,UAAAA;AAAnB,SAAD;AAAA,4BACV,QAAC,UAAD;AAAqB,UAAA,IAAI,EAAEF,IAA3B;AAAiC,UAAA,SAAS,EAAEC;AAA5C,WAAiBC,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADU;AAAA,OAAX;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADoB;AAAA,CAAtB;;MAAML,a;;AAUN,MAAMM,UAAU,GAAG;AAAA,MAAC;AAAEH,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD;AAAA,sBAAyB;AAAA,eAAKD,IAAL,QAAaC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzB;AAAA,CAAnB;;MAAME,U;;AAEN,MAAMC,cAAc,GAAG,SAAmB;AAAA,MAAlB;AAAEH,IAAAA;AAAF,GAAkB;AACxC,QAAMI,KAAK,GAAGJ,SAAS,CAACK,MAAV,CAAiB,CAACC,eAAD,EAAkBC,IAAlB,KAA2BD,eAAe,GAAGC,IAAI,CAACP,SAAnE,EAA8E,CAA9E,CAAd;AACA,sBACE;AAAA,2BACE;AAAA,wCAA4BI,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPD;;MAAMD,c;;AASN,MAAMK,MAAM,GAAG;AAAA,MAAC;AAAEX,IAAAA;AAAF,GAAD;AAAA,sBACb;AAAA,4BACE,QAAC,QAAD;AAA0B,MAAA,MAAM,EAAEA,MAAM,CAACE;AAAzC,OAAeF,MAAM,CAACI,EAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEJ,MAAM,CAACY;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEZ,MAAM,CAACY;AAAlC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADa;AAAA,CAAf;;MAAMD,M;AAQN,eAAeA,MAAf","sourcesContent":["/*\r\nconst Course = ({ course}) => {\r\n    const total = course.reduce(\r\n        (a, b) => a + b.parts.exercises,\r\n        0\r\n    );\r\n  \r\nreturn (\r\n    <div>\r\n            {course.map(index =>\r\n        <ul key={index.id}>\r\n        {index.name}\r\n         </ul>\r\n            )} \r\n          {course.map(index =>\r\n          <ul key={index.parts}>\r\n              {console.log(index.exercises)}\r\n              {index.exercises}\r\n          </ul>\r\n            )}  \r\n            total of {total} exercises\r\n           \r\n    </div>\r\n)\r\n}\r\n*/\r\n/*\r\nconst Part = (props) => {\r\n    return (\r\n    <div>\r\n    {props.name} {props.exercises}\r\n    </div>\r\n    )\r\n}\r\n/*\r\nconst Sum = ({course}) => {\r\n    const sum = course.map(part => part.exercises)\r\n\r\n    return (\r\n        <div>\r\n      Total {sum.reduce((a,b) => a +b)} of exercises\r\n        </div>\r\n    )\r\n}\r\n*/\r\n/*\r\nconst Content = ({course}) => {\r\n    return (\r\n        <div>\r\n            {course.map( index => \r\n            <Part key={index.part} name={index.name} exercises={index.exercises}/>  )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Header = ({course}) => {\r\n    return (\r\n<h1>\r\n    {course.map(index =>\r\n    <ul key={index.id}>\r\n        {index.name}\r\n    </ul>\r\n        )}\r\n</h1>\r\n    )\r\n}\r\n\r\nconst Course = ({course}) => {  \r\n  \r\n    return (\r\n        <div>\r\n            <Header course={course} />\r\n            <Content course={course} />\r\n            <Sum course={course} />\r\n        </div>\r\n  )\r\n}\r\n*/\r\n\r\nconst H2Header = ({ header }) => <h2>{header}</h2>\r\n\r\nconst CourseContent = ({ course }) => (\r\n  <div>\r\n    <ul>\r\n      {course.map(({ name, exercises, id }) => (\r\n        <CoursePart key={id} name={name} exercises={exercises} />\r\n      ))}\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nconst CoursePart = ({ name, exercises }) => <li>{name}: {exercises}</li>\r\n\r\nconst TotalExercises = ({ exercises }) => {\r\n  const total = exercises.reduce((total_exercises, part) => total_exercises + part.exercises, 0)\r\n  return (\r\n    <p>\r\n      <strong>There are total of {total} exercises</strong>\r\n    </p>\r\n  )\r\n}\r\n\r\nconst Course = ({ course }) => (\r\n  <div>\r\n    <H2Header key={course.id} header={course.name} />\r\n    <CourseContent course={course.parts} />\r\n    <TotalExercises exercises={course.parts} />\r\n  </div>\r\n)\r\n\r\nexport default Course"]},"metadata":{},"sourceType":"module"}